volumes:
  ffun_postgres_data: {}
  ffun_frontend_data: {}
  ffun_caddy_data: {}
  ffun_caddy_config: {}


# TODO: add comments
services:

  postgres:
    image: postgres:15.2

    volumes:
      - ffun_postgres_data:/var/lib/postgresql/data

    environment:
      POSTGRES_DB: ffun
      POSTGRES_USER: ffun
      POSTGRES_PASSWORD: ffun

    healthcheck:
      test: "pg_isready -U ffun -d ffun"
      interval: 1s
      timeout: 5s
      retries: 10

  backend-api:
    # TODO: change to ffun-backend:latest
    image: ffun-backend:test

    # TODO: wait somehow till the DB is ready
    depends_on:
      postgres:
        condition: service_healthy

    command:
      - /bin/bash
      - -c
      - |
        ffun migrate
        echo "migrations successed"
        uvicorn ffun.application.application:app --host 0.0.0.0 --port 8000 --workers 1

    # TODO: env
    # TODO: configs
    # TODO: collections
    volumes:
      - ${PWD}/.env:/ffun/.env
    #   - ${PWD}/.configs:/repository/.configs
    #   - ${PWD}/feeds_collections:/repository/feeds_collections

    environment:
      FFUN_ENABLE_API: "True"

  backend-workers:
    # TODO: change to ffun-backend:latest
    image: ffun-backend:test

    depends_on:
      postgres:
        condition: service_healthy

    command:
      - /bin/bash
      - -c
      - |
        ffun migrate
        echo "migrations successed"
        ffun workers --loader --librarian

    # TODO: env
    # TODO: configs
    # TODO: collections
    volumes:
      - ${PWD}/.env:/ffun/.env
    #   - ${PWD}/.configs:/repository/.configs
    #   - ${PWD}/feeds_collections:/repository/feeds_collections

    environment: {}

  frontend-data:
    # TODO: change to ffun-frontend:latest
    image: ffun-frontend-data:test

    volumes:
      - ${PWD}/.env:/ffun/.env
      - ffun_frontend_data:/ffun-static-data

    environment: {}

  frontend-caddy:
    image: caddy:2.10.0

    volumes:
      - ffun_caddy_data:/data
      - ffun_caddy_config:/config
      - ffun_frontend_data:/ffun-static-data
      - ${PWD}/Caddyfile:/etc/caddy/Caddyfile

    ports:
      - "80:80"
      - "443:443"
