name: code checks
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  workflow_call:
    inputs:
      branch_ref:
        type: string
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.branch_ref }}
  cancel-in-progress: true

jobs:

  prepare-dev-containers:
    timeout-minutes: 20
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch_ref }}

      - name: Pull containers
        # postgresql is dependency of backend-utils
        run: docker compose pull postgresql

      - name: Build containers
        run: ./bin/build-local-containers.sh

      - name: Save Docker cache
        run: docker save --output docker-images.tar $(docker images --quiet)

      - uses: actions/upload-artifact@v4
        with:
          name: docker-cache
          path: docker-images.tar
          retention-days: 1

  run-dev-checks:
    needs: prepare-dev-containers
    timeout-minutes: 20
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        include:

          - name: Check code formatting
            command: ./bin/check-code-formatting.sh

          - name: Check types
            command: ./bin/check-code-semantics.sh

          - name: Run tests
            command: ./bin/run-tests.sh

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch_ref }}

      - uses: actions/download-artifact@v4
        with:
          name: docker-cache
          path: .

      - name: Load Docker cache
        run: docker load --input docker-images.tar

      - name: ${{ matrix.name }}
        run: ${{ matrix.command }}

  run-prod-checks:
    timeout-minutes: 20
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch_ref }}

      - name: check ffun cli is runnable in prod
        run: ./bin/check-ffun-runnable-in-prod.sh
