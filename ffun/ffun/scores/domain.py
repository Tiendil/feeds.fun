import uuid

from ffun.ontology import domain as o_domain

from . import rules

_raw_rules = {
    ("audience:adults",): 1,
    ("audience:beginner",): -10,
    ("audience:developers",): 1,
    ("audience:gamers",): 1,
    ("audience:general",): 0,
    ("audience:students",): -3,
    ("audience:users",): -5,
    ("author:ailev",): 1,
    ("author:anonymous",): 1,
    ("author:anton-pervushin",): 1,
    ("author:karl-voit",): 1,
    ("author:kyzrati",): 1,
    ("author:narratorika",): 1,
    ("author:pierre-neidhardt",): 1,
    ("author:tiendil",): 1,
    ("author:tony-sart",): 1,
    ("author:unknown",): 0,
    ("author:zen-of-design",): 1,
    ("city:moscow",): -10,
    ("country:austria",): -10,
    ("country:china",): -10,
    ("country:france",): -10,
    ("country:germany",): 1,
    ("country:russia",): -10,
    ("country:uk",): -10,
    ("country:ukraine",): -10,
    ("country:united-states",): 0,
    ("country:us",): 0,
    ("country:usa",): 0,
    ("event:conference",): -1,
    ("event:description",): -1,
    ("event:release",): 1,
    ("event:type-training",): -1,
    ("genre:action",): 0,
    ("genre:adventure",): 0,
    ("genre:article",): 1,
    ("genre:blog",): 0,
    ("genre:fantasy",): 1,
    ("genre:fiction",): 1,
    ("genre:non-fiction",): 1,
    ("genre:roguelike",): 10,
    ("genre:rpg",): 2,
    ("genre:sci-fi",): 1,
    ("genre:strategy",): 2,
    ("industry:gaming",): 3,
    ("industry:it",): 1,
    ("industry:technology",): 1,
    ("language:c",): 1,
    ("language:en",): 0,
    ("language:english",): 0,
    ("language:german",): 0,
    ("language:go",): 1,
    ("language:java",): -10,
    ("language:javascript",): -5,
    ("language:lisp",): 3,
    ("language:python",): 10,
    ("language:ru",): 0,
    ("language:russian",): 0,
    ("language:rust",): 3,
    ("organization:agilelab",): 0,
    ("organization:google",): -3,
    ("organization:openai",): 10,
    ("organization:salesforce",): -3,
    ("person:mikhail-kuzmin",): 1,
    ("platform:android",): -10,
    ("platform:artstation",): 1,
    ("platform:discord",): 1,
    ("platform:emacs",): 10,
    ("platform:github",): 5,
    ("platform:linux",): 2,
    ("platform:macos",): -10,
    ("platform:mastodon",): 3,
    ("platform:mobile",): -5,
    ("platform:pc",): 3,
    ("platform:steam",): 5,
    ("platform:twitter",): -5,
    ("platform:unity",): -5,
    ("platform:windows",): -10,
    ("platform:youtube",): 0,
    ("product:book",): 5,
    ("product:chatgpt",): 15,
    ("product:emacs",): 10,
    ("product:game",): 10,
    ("purpose:advice",): 1,
    ("purpose:announcement",): 1,
    ("purpose:education",): -5,
    ("purpose:educational",): -5,
    ("purpose:entertainment",): -1,
    ("purpose:improvement",): 0,
    ("purpose:informative",): 0,
    ("purpose:learning",): -1,
    ("purpose:research",): 1,
    ("purpose:security",): 0,
    ("purpose:testing",): -5,
    ("sentiment:negative",): 0,
    ("sentiment:neutral",): 0,
    ("sentiment:positive",): 0,
    ("source:arxiv",): 1,
    ("source:dev-by",): 0,
    ("source:gametarget-ru",): 0,
    ("source:github",): 3,
    ("source:livejournal",): 0,
    ("source:medium",): -3,
    ("source:narratorika",): 0,
    ("source:pcgamesn",): -5,
    ("source:reddit",): 1,
    ("source:substack",): 0,
    ("source:the-atlantic",): 1,
    ("source:twitter",): -1,
    ("source:unknown",): 0,
    ("source:unwinnable",): 0,
    ("source:wikipedia",): 3,
    ("source:youtube",): 0,
    ("topic:ai",): 10,
    ("topic:alife",): 10,
    ("topic:art",): -1,
    ("topic:artificial-intelligence",): 10,
    ("topic:biology",): 5,
    ("topic:blockchain",): 2,
    ("topic:board-games",): 5,
    ("topic:books",): 5,
    ("topic:business",): 1,
    ("topic:career",): 0,
    ("topic:chemistry",): 2,
    ("topic:climate-change",): -5,
    ("topic:communication",): 0,
    ("topic:community",): 1,
    ("topic:computer-science",): 2,
    ("topic:computer-vision",): -3,
    ("topic:computing",): 0,
    ("topic:cosmology",): 1,
    ("topic:covid-19",): -10,
    ("topic:crime",): 1,
    ("topic:crypto",): 1,
    ("topic:data-analysis",): 1,
    ("topic:database",): 4,
    ("topic:debugging",): 3,
    ("topic:economics",): -2,
    ("topic:economy",): -2,
    ("topic:education",): 0,
    ("topic:emacs",): 10,
    ("topic:engineering",): 2,
    ("topic:ethics",): 3,
    ("topic:evolution",): 20,
    ("topic:feedback",): 1,
    ("topic:fiction",): 1,
    ("topic:film",): -5,
    ("topic:finance",): -1,
    ("topic:game-design",): 10,
    ("topic:game-development",): 10,
    ("topic:gamedev",): 10,
    ("topic:games",): 0,
    ("topic:gaming",): 0,
    ("topic:genetics",): 3,
    ("topic:geometry",): 1,
    ("topic:health",): -3,
    ("topic:history",): 1,
    ("topic:internet",): 0,
    ("topic:investment",): 1,
    ("topic:law",): -1,
    ("topic:leadership",): 1,
    ("topic:linux",): 4,
    ("topic:literature",): 2,
    ("topic:machine-learning",): 3,
    ("topic:management",): 1,
    ("topic:marketing",): 1,
    ("topic:mathematics",): 2,
    ("topic:media",): -1,
    ("topic:medicine",): -1,
    ("topic:music",): -5,
    ("topic:narrative-design",): 7,
    ("topic:natural-language-processing",): 2,
    ("topic:networking",): 1,
    ("topic:neural-networks",): 7,
    ("topic:open-source",): 10,
    ("topic:operating-system",): 1,
    ("topic:package-management",): 1,
    ("topic:personal",): 1,
    ("topic:philosophy",): 1,
    ("topic:physics",): 1,
    ("topic:politics",): -1,
    ("topic:privacy",): 1,
    ("topic:procedural-generation",): 15,
    ("topic:productivity",): 1,
    ("topic:programming",): 1,
    ("topic:programming-language",): 1,
    ("topic:programming-languages",): 1,
    ("topic:psychology",): 1,
    ("topic:python",): 5,
    ("topic:religion",): 1,
    ("topic:research",): 1,
    ("topic:robotics",): 1,
    ("topic:roguelike",): 5,
    ("topic:science",): 1,
    ("topic:science-fiction",): 1,
    ("topic:security",): 1,
    ("topic:social-media",): -5,
    ("topic:society",): -3,
    ("topic:software",): 1,
    ("topic:software-architecture",): 5,
    ("topic:software-design",): 5,
    ("topic:software-development",): 3,
    ("topic:software-engineering",): 3,
    ("topic:space",): 2,
    ("topic:startup",): 2,
    ("topic:statistics",): 1,
    ("topic:storytelling",): 5,
    ("topic:technology",): 3,
    ("topic:travel",): 1,
    ("topic:video-games",): 5,
    ("topic:web-development",): 4,
    ("topic:writing",): 10,
}


async def get_rules() -> list[rules.BaseRule]:
    result: list[rules.BaseRule] = []

    for tags, score in _raw_rules.items():
        tags_ids = {await o_domain.get_id_by_tag(tag) for tag in tags}

        result.append(rules.HasTags(tags=tags_ids, score=score))

    return result


def get_score(rules: list[rules.BaseRule], tags: set[int]) -> int:
    total = 0

    for rule in rules:
        total += rule.score(tags)

    return total


def get_scores(rules: list[rules.BaseRule], entries_tags: dict[uuid.UUID, set[int]]) -> dict[uuid.UUID, int]:
    return {entry_id: get_score(rules, tags)
            for entry_id, tags in entries_tags.items()}
